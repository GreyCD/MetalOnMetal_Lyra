// Copyright Erik Hedberg. All rights reserved.

#pragma once

#include "CoreMinimal.h"
#include "Kismet/GameplayStaticsTypes.h"
#include "Threading/TerminalBallisticsThreadingTypes.h"
#include "Types/TBProjectileId.h"
#include "Types/TBProjectileInjury.h"
#include "Types/TBSimData.h"
#include "UObject/Object.h"
#include "TBFireBulletAsync.generated.h"

USTRUCT(BlueprintType)
struct FTBCompletionResult
{
	GENERATED_BODY()
	UPROPERTY(BlueprintReadOnly, VisibleAnywhere, Category = Completion)
	FTBProjectileId Id;
	UPROPERTY(BlueprintReadOnly, VisibleAnywhere, Category = Completion)
	TArray<FPredictProjectilePathPointData> Results;
};

USTRUCT(BlueprintType)
struct FTBBulletInjuryResult
{
	GENERATED_BODY()
	UPROPERTY(BlueprintReadOnly, VisibleAnywhere, Category = Injury)
	FTBImpactParams ImpactParams;
	UPROPERTY(BlueprintReadOnly, VisibleAnywhere, Category = Injury)
	FTBProjectileInjuryParams InjuryParams;
};

DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FTBK2_OnComplete, const FTBCompletionResult&, CompletionResult);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FTBK2_OnBulletInjure, const FTBBulletInjuryResult&, Injury);

UCLASS()
class TERMINALBALLISTICS_API UTBFireBulletAsync : public UObject
{
	GENERATED_BODY()

public:
	virtual void BeginDestroy() override;

	UPROPERTY(BlueprintAssignable, Category = Delegates)
	FTBK2_OnComplete onComplete;
	UPROPERTY(BlueprintAssignable, Category = Delegates)
	FOnBulletHit onHit;
	UPROPERTY(BlueprintAssignable, Category = Delegates)
	FOnBulletHit onExitHit;
	UPROPERTY(BlueprintAssignable, Category = Delegates)
	FTBK2_OnBulletInjure onInjure;
	UPROPERTY(BlueprintAssignable, Category = Delegates)
	FOnUpdate onUpdate;

	/**
	* Add and fire a bullet.
	* @param DesiredId		Used to override the autogenerated Id. Useful when you need to sync Ids across client and server. Use with caution, as duplicate Ids can result in unwanted behavior.
	* @param ActualId		The Id of the bullet fired.
	* @param bEnableUpdate	Whether or not to enable the "On Update" event. When enabled, it can impact performance.
	*/
	UFUNCTION(BlueprintCallable, meta = (AdvancedDisplay = "DebugType, DesiredId", AutoCreateRefTerm = "LaunchParams, DesiredId", BlueprintInternalUseOnly = true))
	static UTBFireBulletAsync* CreateProxyObject(
		TSoftObjectPtr<class UBulletDataAsset> Bullet,
		UPARAM(Ref)FTBLaunchParams& LaunchParams,
		UPARAM(Ref)const FTBProjectileId& DesiredId,
		FTBProjectileId& ActualId,
		UPARAM(meta = (Bitmask, BitmaskEnum = "/Script/TerminalBallistics.ETBBallisticsDebugType")) int32 DebugType = 0,
		bool bEnableUpdate = false
	);

protected:
	FTBProjectileId AddAndFireBulletAsync(
		TSoftObjectPtr<class UBulletDataAsset> Bullet,
		FTBLaunchParams& LaunchParams,
		const FTBProjectileId& DesiredId,
		int32 DebugType = 0,
		bool bEnableUpdate = false
	);

	UFUNCTION()
	void OnComplete(const FTBProjectileId& Id, const TArray<FPredictProjectilePathPointData>& Results);
	UFUNCTION()
	void OnHit(const FTBImpactParams& HitImpactParams);
	UFUNCTION()
	void OnExitHit(const FTBImpactParams& ExitHitImpactParams);
	UFUNCTION()
	void OnInjure(const FTBImpactParams& InjureImpactParams, const FTBProjectileInjuryParams& OnInjureInjuryParams);
	UFUNCTION()
	void OnUpdate(const FTBProjectileFlightData& FlightData);

	TB::SimTasks::TSimTaskDelegates<FOnComplete, FOnBulletHit, FOnBulletExitHit, FOnBulletInjure, FOnUpdate> Delegates;
};
